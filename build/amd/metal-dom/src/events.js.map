{"version":3,"sources":["events.js"],"names":["mouseEventMap","mouseenter","mouseleave","pointerenter","pointerleave","Object","keys","forEach","eventName","delegate","handler","callback","event","related","relatedTarget","target","delegateTarget","contains","customType","originalEvent","animationEventMap","animation","transition","eventType","checkAnimationEventName"],"mappings":";AAAA;;;;;;;;;;AAKA,KAAMA,gBAAgB;AACrBC,cAAY,WADS;AAErBC,cAAY,UAFS;AAGrBC,gBAAc,aAHO;AAIrBC,gBAAc;AAJO,EAAtB;AAMAC,QAAOC,IAAP,CAAYN,aAAZ,EAA2BO,OAA3B,CAAmC,UAASC,SAAT,EAAoB;AACtD,gCAAoBA,SAApB,EAA+B;AAC9BC,aAAU,IADoB;AAE9BC,YAAS,iBAASC,QAAT,EAAmBC,KAAnB,EAA0B;AAClC,QAAMC,UAAUD,MAAME,aAAtB;AACA,QAAMC,SAASH,MAAMI,cAArB;AACA,QAAI,CAACH,OAAD,IAAaA,YAAYE,MAAZ,IAAsB,CAACA,OAAOE,QAAP,CAAgBJ,OAAhB,CAAxC,EAAmE;AAClED,WAAMM,UAAN,GAAmBV,SAAnB;AACA,YAAOG,SAASC,KAAT,CAAP;AACA;AACD,IAT6B;AAU9BO,kBAAenB,cAAcQ,SAAd;AAVe,GAA/B;AAYA,EAbD;;AAeA,KAAMY,oBAAoB;AACzBC,aAAW,cADc;AAEzBC,cAAY;AAFa,EAA1B;AAIAjB,QAAOC,IAAP,CAAYc,iBAAZ,EAA+Bb,OAA/B,CAAuC,UAASgB,SAAT,EAAoB;AAC1D,MAAMf,YAAYY,kBAAkBG,SAAlB,CAAlB;AACA,gCAAoBf,SAApB,EAA+B;AAC9BI,UAAO,IADuB;AAE9BH,aAAU,IAFoB;AAG9BC,YAAS,iBAASC,QAAT,EAAmBC,KAAnB,EAA0B;AAClCA,UAAMM,UAAN,GAAmBV,SAAnB;AACA,WAAOG,SAASC,KAAT,CAAP;AACA,IAN6B;AAO9BO,kBAAe,mBAASK,uBAAT,GAAmCD,SAAnC;AAPe,GAA/B;AASA,EAXD","file":"events.js","sourcesContent":["'use strict';\n\nimport { registerCustomEvent } from './dom';\nimport features from './features';\n\nconst mouseEventMap = {\n\tmouseenter: 'mouseover',\n\tmouseleave: 'mouseout',\n\tpointerenter: 'pointerover',\n\tpointerleave: 'pointerout'\n};\nObject.keys(mouseEventMap).forEach(function(eventName) {\n\tregisterCustomEvent(eventName, {\n\t\tdelegate: true,\n\t\thandler: function(callback, event) {\n\t\t\tconst related = event.relatedTarget;\n\t\t\tconst target = event.delegateTarget;\n\t\t\tif (!related || (related !== target && !target.contains(related))) {\n\t\t\t\tevent.customType = eventName;\n\t\t\t\treturn callback(event);\n\t\t\t}\n\t\t},\n\t\toriginalEvent: mouseEventMap[eventName]\n\t});\n});\n\nconst animationEventMap = {\n\tanimation: 'animationend',\n\ttransition: 'transitionend'\n};\nObject.keys(animationEventMap).forEach(function(eventType) {\n\tconst eventName = animationEventMap[eventType];\n\tregisterCustomEvent(eventName, {\n\t\tevent: true,\n\t\tdelegate: true,\n\t\thandler: function(callback, event) {\n\t\t\tevent.customType = eventName;\n\t\t\treturn callback(event);\n\t\t},\n\t\toriginalEvent: features.checkAnimationEventName()[eventType]\n\t});\n});\n"]}